// scripts/generate-icon-indexes.cjs

const fs = require('fs');
const path = require('path');

const ICON_PREFIX = 'min';
const ICONS_BASE_DIR = '/Users/anandt1/Documents/own/minimalist-ui/src/core/icons';

const ICON_VARIANTS = [
    {
        dirName: 'solid',
        suffix: 'Solid'
    },
    {
        dirName: 'outline',
        suffix: 'Outline'
    }
];

function generateIndexFile(variant) {
    const { dirName, suffix } = variant;
    const iconDir = path.join(ICONS_BASE_DIR, dirName);

    if (!fs.existsSync(iconDir)) {
        console.warn(`Directory not found, skipping: ${iconDir}`);
        return;
    }

    console.log(`Generating index for "${dirName}" icons...`);

    const iconFiles = fs.readdirSync(iconDir).filter((file) => file.endsWith(`Icon.tsx`) && file !== 'index.tsx');

    if (iconFiles.length === 0) {
        console.log(`No icons found in ${dirName}.`);
        return;
    }

    const iconData = iconFiles.map((file) => {
        const componentName = path.basename(file, '.tsx');
        const iconObjectName = `${ICON_PREFIX}${componentName.replace(/Icon$/, '')}`;
        const importPath = `@minimalist-ui/core/icons/${componentName}`;
        return { componentName, iconObjectName, importPath };
    });

    const exports = iconData
        .map(
            ({ componentName, iconObjectName, importPath }) =>
                `export { ${iconObjectName.replace('Icon', '')}, ${componentName} } from '${importPath}';`
        )
        .join('\n');

    const imports = iconData
        .map(
            ({ iconObjectName, importPath }) => `import { ${iconObjectName.replace('Icon', '')} } from '${importPath}';`
        )
        .join('\n');

    const registrationArray = `const ${dirName}Icons = [\n  ${iconData
        .map(({ iconObjectName }) => iconObjectName.replace('Icon', ''))
        .join(',\n  ')},\n];`;

    const fileContent = `// This file is auto-generated by a script. Do not edit manually.

import { registerIcon } from '@minimalist-ui/core';

// --- Re-export all icons and components ---
${exports}

// --- Import icon objects for registration ---
${imports}

// --- Register all icons ---
${registrationArray}

${dirName}Icons.forEach(registerIcon);
`;

    fs.writeFileSync(path.join(iconDir, 'index_new.ts'), fileContent);
    console.log(`âœ… Successfully generated index_new.ts for "${dirName}".`);
}

function main() {
    [{ dirName: '', suffix: '' }].forEach(generateIndexFile);
    console.log('\nIcon index generation complete!');
}

main();
